[{"title":"网页书签","date":"2017-09-05T05:00:00.000Z","path":"2017/09/05/diary-170817-1/","text":"C# 线程间不能调用剪切板的问题 - 编程之家 - CSDN博客 C# 以MDF文件链接数据库 - 隔壁老王的博客 - CSDN博客 Markdown-入门指南及网站整合 - 努力在追梦的路上 - CSDN博客 Untitled - 马克飞象 - 专为印象笔记打造的Markdown编辑器","tags":[{"name":"2017-9","slug":"2017-9","permalink":"//xnu132.win/tags/2017-9/"},{"name":"书签","slug":"书签","permalink":"//xnu132.win/tags/书签/"}]},{"title":"来点纯音提提神吧","date":"2017-08-06T23:47:00.000Z","path":"2017/08/07/diary-170807-1/","text":"提神醒脑的一剂良药 😆 🎵🎶 点击打开网易云歌单","tags":[{"name":"药别停","slug":"药别停","permalink":"//xnu132.win/tags/药别停/"},{"name":"音乐","slug":"音乐","permalink":"//xnu132.win/tags/音乐/"},{"name":"2017-8","slug":"2017-8","permalink":"//xnu132.win/tags/2017-8/"}]},{"title":"日常随笔 17-07-25","date":"2017-07-25T15:30:00.000Z","path":"2017/07/25/diary-170725-1/","text":"最近“闲”的时候干了这些事 👇👇👇 1、 云中转聊天程序的登录界面有所优化 用户可以点击登录界面左下角的小按钮通过用户名搜索自己的账号用以解决忘记账号而无法登录的尴尬虽然没什么人在用我这个所谓的“云中转聊天程序”聊天就是了😅 2、 由于网易云跟帖前段时间也宣布下线，本站的评论系统改为友言（目前已换成 来必力） 说实话，未备案域名无法使用畅言就已经让人很不爽了结果稍微差那么一丢丢但还看的过去的网易云跟帖居然宣布下线！？简直是屋漏偏逢连夜雨，于是只好选用了与主题极不搭调的友言由于技术不到位，布局不会调，新开的友言评论框简直没法看体验了一段时间之后，决定放弃友言现在已更换为来必力 -&gt;自学过程中编写的小程序&lt;-","tags":[{"name":"随笔","slug":"随笔","permalink":"//xnu132.win/tags/随笔/"},{"name":"2017-7","slug":"2017-7","permalink":"//xnu132.win/tags/2017-7/"}]},{"title":"C#创建非矩形窗体","date":"2017-07-24T04:30:00.000Z","path":"2017/07/24/diary-170724-1/","text":"简 介1、 C#根据含透明色的图片创建非矩形窗体 2、 鼠标左键控制该窗体的移动 （转载请注明出处） 具体操作1、 在新建立的窗体中拖入PictureBox控件 2、 设置好PictureBox的图片来源 3、 其属性SizeMode设置为StretchImage（拉伸） 4、 设置窗体背景色透明，在窗体加载事件中添加如下代码： 123this.TransparencyKey = Color.White; //设置当前窗体的默认透明色 this.BackColor = this.TransparencyKey; //设置当前窗体的背景色为透明 this.FormBorderStyle = FormBorderStyle.None; //设置窗体无边框 5、 让鼠标控制窗体的移动（详细代码见后文） 首先创建一个Point对象downPoint（用于记录鼠标移动前的坐标） 然后在PictureBox的MouseDown事件中将鼠标移动前的坐标e.Location赋值给downPoint 最后，在pictureBox的MouseMove事件中先判断当前按键是否为鼠标左键，若是，则通过鼠标移动前的坐标和移动后的坐标生成新的坐标赋值给当前的窗体 代 码1234567891011121314151617181920212223242526272829303132333435363738394041using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Linq;using System.Runtime.InteropServices;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;namespace MainFrm&#123; public partial class Form1 : Form &#123; public Form1() &#123; InitializeComponent(); &#125; private void Form1_Load(object sender, EventArgs e) &#123; this.TransparencyKey = Color.White; //设置当前窗体的默认透明色 this.BackColor = this.TransparencyKey; //设置当前窗体的背景色为透明 this.FormBorderStyle = FormBorderStyle.None; //设置窗体无边框 &#125; Point downPoint; //用于记录鼠标移动前的位置 private void pictureBox1_MouseDown(object sender, MouseEventArgs e) &#123;//将鼠标移动前的位置赋值给downPoint downPoint = e.Location; &#125; private void pictureBox1_MouseMove(object sender, MouseEventArgs e) &#123; if (e.Button==MouseButtons.Left) &#123;//通过鼠标的移动前和移动后的坐标生成新的坐标 Location = new Point(Location.X + e.X - downPoint.X, Location.Y + e.Y - downPoint.Y); &#125; &#125; &#125;&#125; （本页地址：http://xnu132.win/2017/07/24/diary-170724-1/ ）","tags":[{"name":"教程","slug":"教程","permalink":"//xnu132.win/tags/教程/"},{"name":"2017-7","slug":"2017-7","permalink":"//xnu132.win/tags/2017-7/"},{"name":"C#","slug":"C","permalink":"//xnu132.win/tags/C/"}]},{"title":"C#小程序 - - 云中转聊天","date":"2017-07-13T14:45:00.000Z","path":"2017/07/13/diary-170713-1/","text":"概 述C#小程序第二波 - - “云中转聊天”（EX-Chat） 基本功能完成于前些日子，更多功能还在探索中 缘 由“为什么想做这么个项目呢？” 本人在学习.NET的时候对使用Socket编程实现通信遇到的一些问题深有感触。当时懂的东西特少，以为只要在我的电脑连接网络开启Socket服务端，其他能连上网的电脑上的客户端就能连接得到。直到后来与同学在两个不同内网中测试自己写出来的程序的可用性的时候发现根本连不上，当时我还以为是自己将代码写错了才会导致这种情况，后来证明是当时的自己图样图森破。原来，Socket服务端要想让所有客户端都能连接到，必须得将其运行在连接了外网的服务器（或是电脑）上，或者还有一种方案就是对自己的电脑进行NAT穿透（也就是所谓的内网穿透吧）。苦于本人对NAT并不是特别了解，虽然知道有这么个方案，由于也没有很多空闲时间去学，于是就一直没能将其实现。没有连接到外网的电脑也不会用NAT怎么办呢？那么接下来这个项目就是介绍一种无服务器的简单通信方案。 思 路为了解决以上所说的那些问题，我的思路大致是这样的： 首先，准备工作 由于本人想的这个方案由于比较简单，所以要求也比较低，总的来说一个能用的云数据库则足以（云数据库可以上服务供应商官网购买，如果只是感兴趣想学学，你也可以上论坛找找看有没有免费试用的） 有了云数据库之后，我们先在云数据库上面建立一张初始表用于存储用户的数据，表中的相关字段根据自己的需要自行设置，以本人项目为例，我创建的用户数据表主要包含了七个字段：用户账号、用户名、用户密码、注册时间、在线状态、最后登录时间、用户类型。 接下来 就是使用VS进行用户界面的搭建了，主要包含登录、注册、好友列表、聊天界面四个窗体。因为跟本文主题不相关，这里不进行细说，每个人都有自己的想法，只要能实现基本的功能即可。 用户界面搭建好了之后，最关键的就是注册和聊天功能了。 注册时，用户填写相关信息，点击“注册”，客户端随机生成一个长度为5的数字作为账号，并将其与用户填写的信息一起写入到用户数据表中，同时建立一张专门用于存储该用户聊天记录的表，这也就完成了聊天功能（仅文字信息）的核心部分，最后就是如何实现客户端之间的通信了。 那么如何实现通信呢？既然有说到是数据库作数据中转，那么学过数据库的同学应该就能猜到是个什么想法了吧。 其实很简单，我利用的只不过就是数据库的增删查改功能。 这里简单的叙述一下消息的发送过程：本地用户在给对方发消息的时候，本地客户端在对方的聊天记录表上插入一条记录，而对方客户端在接收这条消息时则通过Timer控件定时检查对应账号的聊天记录表，如果有新的消息，则将其打印出来。反过来，对方给本地用户发消息也是同一个道理。 其他的比如清空消息记录之类功能，原理都大同小异，只要你会SQL脚本，相信这些实现起来都不难。 具体实现前阵子上阿里云申（ceng）请（xiao）域（pian）名（yi）的时候，顺便加价买了个共享虚拟主机普惠版。 由于廉价的一匹，得来的配置是这样的：200M的网页空间和20M的数据库空间，不过就目前来说，本人拿来学习和测试足以。 云虚拟主机被某帅比搁置了一段时间之后，终于在毫无特殊可言的某天下午迎来了它的使命。 由于是基于云数据库作数据中转的聊天程序，于是本人将项目名暂且取作“云中转聊天”（经过几个版本的迭代更新之后已更改为EX-Chat） 根据以上所述思路操作，经过多次修改，花费了好几天时间之后总算是写出了成品。 外观较为简陋，暂时只实现了基本的通信功能，并且安全性较低，只作学习和测试用。 下面放上几个主要窗体的相关截图用以参考，更多功能留作以后探索，更新日志见此处，这里暂不详述 点击此处下载程序（出于一些个人原因，下载接口暂时已关闭） – end 最后更新于：2017.11.20 end –","tags":[{"name":"2017-7","slug":"2017-7","permalink":"//xnu132.win/tags/2017-7/"},{"name":"C#小程序","slug":"C-小程序","permalink":"//xnu132.win/tags/C-小程序/"}]},{"title":"C#小程序 - - ColorCreator","date":"2017-07-12T10:23:00.000Z","path":"2017/07/12/diary-170712-1/","text":"简 介ColorCreator是本渣于前段时间自学HTML和CSS时依照自己的需求用C#编写的 小小程序，并无太多的功能，简而言之就是 - - 展示十六进制颜色代码所对应的颜色 细 究当时在写HTML标签时遇到了一个问题，本渣不太清楚颜色的十六进制代码对应什么样的颜色 （汗！） 虽然这么串十六进制代码有它的规律，但是本渣并没有深究 原因很简单，懒 ~ 可能有人会说，“写到HTML的某个标签里上浏览器跑一下不就好了？” 的确，使用这种方式来查看颜色代码对应着什么样的颜色再方便不过 可是本渣就是喜欢折腾更加方便的method，(&gt;_&lt;) 还是一个字，懒！ 我都懒得写到HTML里面了 直接复制粘贴，点一下生成按钮就可以看到结果多方便啊 基于这么个想法，本渣打开了vs 咔咔咔地撸了几行代码之后，一个小巧的颜色生成器就出来啦 实际结合TakeColor使用起来还确实挺方便的（TakeColor没有集成“通过十六进制代码生成颜色”这项功能） 不过吧，本渣并没有因此而感到满意 要是还能通过调节TakeColor上面那种小滑块来获得自己想要的颜色岂不美哉 想是这样想，不过距离上次这样想已经过去大概有三个月了吧 可是本渣至今没有行动，还是那个字、、 呵呵哒 、、以后再说以后再说 哈哈 截图奉上： 点击此处下载程序 点击此处查看源码 下面放上“生成”按钮的代码：1234567891011121314151617181920212223242526272829//点击生成按钮private void btnCreate_Click(object sender, EventArgs e)&#123; if (!string.IsNullOrEmpty(this.labelMsg.Text)) &#123; this.labelMsg.Text = &quot;&quot;; &#125; if (txtInput.Text.Length == 7) &#123; Bitmap bmp = new Bitmap(200, 150); Graphics g = Graphics.FromImage(bmp); string hex = this.txtInput.Text; try &#123; Color _color = System.Drawing.ColorTranslator.FromHtml(hex); Brush b = new SolidBrush(_color); g.FillRectangle(b, new Rectangle(0, 0, 200, 150)); this.picColorBoard.Image = bmp; &#125; catch &#123; labelMsg.Text = &quot;**请输入有效的十六进制码**&quot;; &#125; &#125; else &#123; labelMsg.Text = &quot;**请输入有效的十六进制码**&quot;; &#125;&#125; 后 记此为本渣第一篇用于 - - 记录【在自学.NET的道路上积累的经验】 并且 【收录个人鼓捣出的作品】 的文章 另外，本渣自己鼓捣出来的小程序的下载地址 看这里 仅用于学习和测试仅用于学习和测试仅用于学习和测试","tags":[{"name":"2017-7","slug":"2017-7","permalink":"//xnu132.win/tags/2017-7/"},{"name":"C#小程序","slug":"C-小程序","permalink":"//xnu132.win/tags/C-小程序/"}]},{"title":"音乐分享 - - アイロニ","date":"2017-06-24T04:23:00.000Z","path":"2017/06/24/diary-170624-1/","text":"人生って何なのって? 少し歩き疲れたんだ有些走累了啊少し歩き疲れたんだ有些走累了呢月並みな表現(ひょうげん)だけど雖然以那麼平凡的表現人生(じんせい)とかいう長い道を來形容人生漫長的道路少し休みたいんだ想稍稍休息下呢少し休みたいんだけど虽然想稍稍休息一下時間は刻一刻(こくいっこく)残酷と可是時間每時每刻都這樣殘酷私を 引っぱっていくんだ將我 緊拖著前行Yeah—— Yeah——Yeah—— うまくいきそうなんだけど雖然看似順利地進行著うまくいかないことばかりで但其實全是不順利的事迂闊(うかつ)にも泣いてしまいそうになる因此一塌糊塗地哭起來情(なさ)けない本当にな真是丟人呢惨(みじ)めな気持なんか這樣悲慘的感受嫌というほど味わってきたし已經不想再次體驗到了とっくに悔しさなんてものは明明應該將悔恨之類的捨ててきたはずなのに早早丟棄掉絶望抱くほど 悪いわけじゃないけど雖然也不是感到絕望般 那樣差勁欲しいものは いつも少し手には届かない但是想要的東西 卻永遠得不到手そんな半端(はんぱ)だとね對這樣沒用的傢伙なんか期待してしまうから為何會有所期待呢それならもういっそのこと既然如此不如乾脆ドン底まで突き落としてよ就將它推入穀底吧答えなんて言われたって即使要說出些什么答案人によってすり替(か)わってって因人不同也會有所改變だから絶対(ぜったい)なんて絶対所以絕對之類的絕對信じらんないよ ねぇ是不能相信的 對吧苦しみって誰にもあるって誰都會有苦楚そんなのわかってるから何だって說著那些什么都明白なら笑って済ませばいいの？那就笑著应对過去就好了吧？もうわかんないよ バカ！我不知道該怎麼辦啦 笨蛋！ 散々言われてきたくせに明明是被狠狠說了一番なんだ まんざらでもないんだ但卻未必就是這樣簡単に考えたら楽なことも將簡單思考起來很容易的事難関(なんかん)に考えてたんだ也當做難題考慮了段々(だんだん)と色々めんどくなって種種事都越發麻煩もう淡々と終わらせちゃおうか讓一切都淡泊結束吧「病んだ？」とかもう 嫌になったから「病了嗎？」之類的已經受夠了やんわりと終わればもういいじゃんか能溫和地結束不就好了嗎夢だとか希望だとか 生きてる意味とか夢也好希望也好 亦或是生存意義別にそんなものはさして 必要ないから那些東西也並不是 沒有必要存在具体的(ぐたいてき)でわかりやすい請給我具體易懂的機会(きかい)をください這樣的機會啊泣き場所探すうちに在尋找哭泣的地方時もう泣き疲れちゃったよ就已經哭累了啊きれいごとって嫌い だって討厭華而不實的話期待しちゃっても形になんなくて期待著卻捉不到蛛絲馬跡「星が僕ら見守って」って要說「星星守護著我們」夜しかいないじゃん ねぇ那也就只有晚上 對吧君のその優しいとこ你的那份溫柔不覚(ふかく)にも求めちゃうから我在不知不覺中尋求著この心やらかいとこ這顆心的柔軟もう触んないで ヤダ！請别再觸碰了 不要了啊！ もうほっといて不要再管我了啊もう置いてって就这样丟下我吧汚れきったこの道は弄髒了的這條路もう変わんないよ嗚呼已無法改變了啊疲れちゃって弱気(よわき)になって因疲倦而變得懦弱了逃げ出したって無駄なんだって想要逃也是白費力氣だから内面(ないめん)耳塞いで所以內心捂著耳朵もう最低(さいてい)だって泣いて已是最糟了而哭著人生って何なのって人生又是什麼呢わかんなくても生きてるだけで只是不明不白地活著幸せって思えばいいの？認為這即是幸福就可以了嗎？もうわかんないよ バカ！我不明白了啊 笨蛋！","tags":[{"name":"2017-6","slug":"2017-6","permalink":"//xnu132.win/tags/2017-6/"},{"name":"音乐","slug":"音乐","permalink":"//xnu132.win/tags/音乐/"}]},{"title":"音乐分享 - - 一笑倾城","date":"2017-06-12T09:46:00.000Z","path":"2017/06/12/diary-170612-2/","text":"还有什么事情是一首音乐解决不了的？ 😃","tags":[{"name":"2017-6","slug":"2017-6","permalink":"//xnu132.win/tags/2017-6/"},{"name":"药别停","slug":"药别停","permalink":"//xnu132.win/tags/药别停/"},{"name":"音乐","slug":"音乐","permalink":"//xnu132.win/tags/音乐/"}]},{"title":"MarkDown的使用教程","date":"2017-06-12T02:55:00.000Z","path":"2017/06/12/diary-170612-1/","text":"个人总结比较常用的几个 【标题】 123456# 标题1## 标题2### 标题3#### 标题4##### 标题5###### 标题6 【显示效果】 标题1标题2标题3标题4标题5标题6 【字体加粗】 1**目标文本** 【显示效果】 目标文本 【删除线】 1~~要删除的文本~~ 【显示效果】 要删除的文本 【字体倾斜】 1* 目标文本*（“ * ” 后方无空格） 【显示效果】 目标文本 【文字引用】 1&gt; 目标文本 【显示效果】 目标文本 【无序列表】（*、-、+ 均可） 将括号内的符号加到行的前面即可 通过空格缩进实现次级行显示 【有序列表】 在需要添加序号的行的前面添加“1. ”、“2. ”、“3. ”之类文本即可注意“.”后方有空格 【分割线】（“-”大于三个即可） 1------------ 【显示效果】 【直接链接】 1[百度](http://www.baidu.com \"百度\") 【显示效果】 百度 【引用链接】 12[百度][1][1]: http://www.baidu.com \"标题\" 【显示效果】 百度 【表格】 12345|左对齐|居中|右对齐||:---|:---:| ---:|| 1| 2| 3|| a| b| c|| ,| .| 、| 【显示效果】 左对齐 居中 右对齐 1 2 3 a b c , . 、 【github 特有的特性】 复选框列表 在列表符号后面加上[]或者[x]代表选中或者未选中情况1234567[x] C[x] C++[x] Java[x] Qt[x] Android[ ] C#[ ] .NET 【显示效果】 【表情显示】 1:blush: 【显示效果】 😊 更多表情请点击 这里 暂时就这么多吧网上教程很多，这里只列举某帅比觉得还不错的几个 其他教程如下： Markdown——入门指南【荐】 –&gt;传送门&lt;–（转自 Te_Lee的博客） Markdown 11中基本语法 –&gt;传送门&lt;–（转自 秋水Leo的博客） Markdown 语法 示例 字体 字号 颜色 –&gt;传送门&lt;–（转自 ABC-ruifeng的博客） Markdown 语法说明 (简体中文版) –&gt;传送门&lt;–（转自“小众软件”） Markdown: Basics （快速入门） (简体中文版) –&gt;传送门&lt;–（转自“小众软件”） Markdown 官方文档 创始人 John Gruber 的 Markdown 语法说明 Markdown 语法说明(简体中文版).pdf 编辑器推荐【Atom】 软件截图：","tags":[{"name":"2017-6","slug":"2017-6","permalink":"//xnu132.win/tags/2017-6/"},{"name":"教程","slug":"教程","permalink":"//xnu132.win/tags/教程/"},{"name":"Markdown","slug":"Markdown","permalink":"//xnu132.win/tags/Markdown/"}]},{"title":"沉迷二次元无法自拔😆","date":"2017-06-11T14:51:00.000Z","path":"2017/06/11/diary-170611-2/","text":"分享一组二次元美图⚠️⚠️⚠️前方多图预警（about 5~6 Mb）⚠️⚠️⚠️","tags":[{"name":"2017-6","slug":"2017-6","permalink":"//xnu132.win/tags/2017-6/"},{"name":"杯莫停","slug":"杯莫停","permalink":"//xnu132.win/tags/杯莫停/"},{"name":"二次元","slug":"二次元","permalink":"//xnu132.win/tags/二次元/"}]},{"title":"Starting point 2017.6.11","date":"2017-06-11T14:47:00.000Z","path":"2017/06/11/diary-170611-1/","text":"某只闲的蛋疼的帅比折腾了好几天浏览了无数博主发布的教程结合实际操作在经历了无数次失败，积累了不少经验之后终于找到了适合自己的方法搭建属于自己的博客（博客搭建的相关教程请访问本文末尾的跳转链接） 说 明 搭建方式：Hexo+Github，博客采用Litten大佬提供的主题 用 途：个人博客，记录和分享本人在程序猿这条不归路上的坎坷经历 体 会 使用Hexo搭建个人博客相对其他方法来说很方便，在发表博文时用户只需掌握少量Git指令以及Markdown语法即可快速实现 Hexo支持使用Markdown语法编辑博文，相较于直接写HTML标签和代码来说要方便不少，并且易于掌握 Markdown：一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。（ 百度百科传送门： Markdown ） 以下简要介绍使用Markdown在代码显示上的运用：bash代码（创建新的博文）1$ hexo new \"我的第一篇博文\" C#代码1234void ShowMsg()&#123; MessageBox.Show(&quot;博主是个大帅比！&quot;);&#125; js代码1alert(&quot;JavaScript表示赞同！&quot;); 搭建经验及教程本人使用Hexo+Github搭建个人博客的想法来自一个学前端开发的学长 起初是通过访问他的博客正式开始接触“个人博客”这一领域。当时就是觉得拥有一个个人博客是一件挺酷炫的事情，所有知道我博客地址的人都能访问我的网站，浏览我写的博客，这是一件让人觉得很有成就感的事情。 写博客不但可以记录生活中发生的有意义的事情，还能提升自己的写作能力，那么我想这件事本身也很有意义吧。 想归想，要获得成就还是得有付出的。经过一番对于个人博客的初步了解之后，本渣渣总算是步入了个人博客搭建之路。 通过分析那位学长的网站以及他发过的博文，得知有Hexo这么一个框架。 Hexo是一个开源的静态博客生成器,用node.js开发,作者是台湾大学生tommy351。 而他使用的博客主题是由Litten设计开发的，能开发出这么简洁大气的博客主题，想必他也是很厉害的一个人吧！此处送上大佬的博客主页：Litten的博客 使用这种方法搭建个人博客对于我来说的难点是如何使用Hexo。一开始我对Hexo有个误解，一直以为Hexo的主题本身就是一个博客模板，只要把主题里面所有的文件放到github仓库就可以直接访问后来经历过多次失败后才发现事情并没有那么简单。 一番疯狂的学习和实践之后，本站总算是基本搭建完成。折腾了很久，切实验证了一个真理 - - “成功是需要多次尝试并且经历多次失败才能得来的”、、、 期间访问了很多个人博客，收藏了很多教程，按照这些教程一步一步操作，遇到不懂的就百度，相信大家也能很快拥有属于自己的博客 教 程 使用 Hexo 生成一套静态博客网页（主要） 另外还有几个相关链接用于参考： 史上最详细“截图”搭建Hexo博客并部署到Githu Hexo+GitHub Pages搭建属于自己的blog windows环境下使用hexo搭建blog平台 hexo常用命令笔记 github写博客 hexo你的博客 Hexo 主题制作指南 使用AES算法加密hexo文章 Hexo官方文档 本文到此就先告一段落、吧、、、","tags":[{"name":"杂谈","slug":"杂谈","permalink":"//xnu132.win/tags/杂谈/"},{"name":"随笔","slug":"随笔","permalink":"//xnu132.win/tags/随笔/"},{"name":"2017-6","slug":"2017-6","permalink":"//xnu132.win/tags/2017-6/"},{"name":"Github","slug":"Github","permalink":"//xnu132.win/tags/Github/"},{"name":"Hexo","slug":"Hexo","permalink":"//xnu132.win/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"//xnu132.win/tags/Blog/"},{"name":"教程","slug":"教程","permalink":"//xnu132.win/tags/教程/"}]}]